@model Web.ViewModels.Posts.PostEditorViewModel

@Html.HiddenFor(model => model.Id)
<div class="form-group">
    @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DatePost, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-xs-2">
        @Html.EditorFor(model => model.DatePost, "DatePicker", new {htmlAttributes = new {@class = "form-control col-xs-2"}})
        @Html.ValidationMessageFor(model => model.DatePost, "", new {@class = "text-danger"})
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Autor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
        * Nota: Separar por ";"
    </div>
</div>
<hr/>
<div class="form-group">
    @Html.LabelFor(model => model.Subtitle, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Subtitle, "HtmlEditorMediano", new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Subtitle, "", new { @class = "text-danger" })
    </div>
</div>



<div class="form-group">
    @Html.LabelFor(model => model.ContentHtml, htmlAttributes: new {@class = "control-label col-md-2"})
    <div class="col-md-10">
        @Html.EditorFor(model => model.ContentHtml, "HtmlEditor", new {htmlAttributes = new {@class = "form-control"}})
        @Html.ValidationMessageFor(model => model.ContentHtml, "", new {@class = "text-danger"})
    </div>
</div>



<nav class="navbar navbar-default navbar-fixed-bottom">
    <div class="container">
        <ul class="nav navbar-nav navbar-right">
            <li>
                <input id="btnGuardarYSalir" name="boton" type="submit" value="Save and exit" class="btn btn-default navbar-btn"/>&nbsp;&nbsp;
                @*<input id="btnGuardar" name="boton" type="button" value="Save" class="btn btn-primary navbar-btn"/>*@
            </li>
        </ul>
    </div>
</nav>

@if (Model.Id > 0)
{
    <script type="text/javascript">

        //$(document).ready(function() {
        //    jQuery.validator.setDefaults({ ignore: [] });

        //    $("#btnGuardar").click(function(event) {

        //        $(this).val('Saving...')
        //            .prop('disabled', true);;

        //        event.preventDefault();

        //        for (instance in CKEDITOR.instances) {
        //            CKEDITOR.instances[instance].updateElement();
        //        }

        //        Save();
        //    });

        //});

        function Save() {
            $.ajax({
                type: "POST",
                url: "@Url.Action("Save", "Posts")",
                data: $("form").serialize(),
                dataType: "html"
            }).done(function() {

                $("#btnGuardar")
                    .val("Saved")
                    .prop('disabled', false)
                    .removeClass("btn-primary").addClass("btn-success");

                setTimeout(function() {

                    $("#btnGuardar")
                        .val("Save")
                        .removeClass("btn-success").addClass("btn-primary");

                }, 1000);


            }).fail(function() {
                    alert("Se ha producido un error inesperado.");
                    return false;
                }
            );
        }

    </script>
}